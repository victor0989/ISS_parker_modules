library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity dual_port_bram is
    generic (
        DATA_WIDTH : integer := 32;
        ADDR_WIDTH : integer := 11  -- 2^11 = 2048 palabras
    );
    port (
        clk     : in  std_logic;
        -- Puerto A
        en_a    : in  std_logic;
        we_a    : in  std_logic_vector((DATA_WIDTH/8)-1 downto 0);
        addr_a  : in  std_logic_vector(ADDR_WIDTH-1 downto 0);
        din_a   : in  std_logic_vector(DATA_WIDTH-1 downto 0);
        dout_a  : out std_logic_vector(DATA_WIDTH-1 downto 0);

        -- Puerto B
        en_b    : in  std_logic;
        we_b    : in  std_logic_vector((DATA_WIDTH/8)-1 downto 0);
        addr_b  : in  std_logic_vector(ADDR_WIDTH-1 downto 0);
        din_b   : in  std_logic_vector(DATA_WIDTH-1 downto 0);
        dout_b  : out std_logic_vector(DATA_WIDTH-1 downto 0)
    );
end entity;

architecture rtl of dual_port_bram is
    type ram_type is array (0 to 2**ADDR_WIDTH - 1) of std_logic_vector(DATA_WIDTH-1 downto 0);
    signal ram : ram_type := (others => (others => '0'));
begin

    -- Puerto A
    process(clk)
    begin
        if rising_edge(clk) then
            if en_a = '1' then
                for i in 0 to (DATA_WIDTH/8)-1 loop
                    if we_a(i) = '1' then
                        ram(to_integer(unsigned(addr_a)))(8*i+7 downto 8*i) <= din_a(8*i+7 downto 8*i);
                    end if;
                end loop;
                dout_a <= ram(to_integer(unsigned(addr_a)));
            end if;
        end if;
    end process;

    -- Puerto B
    process(clk)
    begin
        if rising_edge(clk) then
            if en_b = '1' then
                for i in 0 to (DATA_WIDTH/8)-1 loop
                    if we_b(i) = '1' then
                        ram(to_integer(unsigned(addr_b)))(8*i+7 downto 8*i) <= din_b(8*i+7 downto 8*i);
                    end if;
                end loop;
                dout_b <= ram(to_integer(unsigned(addr_b)));
            end if;
        end if;
    end process;

end rtl;
